name: Electron Build and Release

on:
  push:
    branches:
      - main # Or your primary branch, e.g., master

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    # Grant GITHUB_TOKEN permissions to write Releases
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' # Cache npm dependencies

      - name: Install dependencies
        run: npm ci # Use ci for cleaner installs

      - name: Build application
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Make GH_TOKEN available for electron-builder if needed for publishing
        run: npm run dist

      - name: Upload Windows Installer Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: LapsusVanta-${{ matrix.os }}
          path: dist_electron/*.exe
          if-no-files-found: error

      - name: Upload Linux Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: LapsusVanta-${{ matrix.os }}
          # electron-builder produces .AppImage by default for linux, but also .snap and .deb if configured.
          # This path will grab the .AppImage. Adjust if you expect other formats.
          path: |
            dist_electron/*.AppImage
            dist_electron/*.snap
            dist_electron/*.deb
          if-no-files-found: error # Fails if no AppImage, snap, or deb is found

      - name: Upload macOS DMG Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: LapsusVanta-${{ matrix.os }}
          path: dist_electron/*.dmg
          if-no-files-found: error
